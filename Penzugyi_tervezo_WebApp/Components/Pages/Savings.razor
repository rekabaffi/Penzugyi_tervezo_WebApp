@page "/savings"
@using System.ComponentModel.DataAnnotations

<h3 class="mb-4">Megtakarítások</h3>

<!-- Költségkeret szekció -->
<EditForm Model="@budgetData" OnValidSubmit="UpdateBudget">
    <div class="mb-3">
        <label class="form-label">Havi költségkeret (Ft)</label>
        <InputNumber @bind-Value="budgetData.MonthlyBudget" class="form-control" />
    </div>
    <div class="mb-3">
        <label class="form-label">Eddig elköltött összeg (Ft)</label>
        <InputNumber @bind-Value="budgetData.SpentAmount" class="form-control" />
    </div>
    <button class="btn btn-success">Frissítés</button>
</EditForm>

<div class="mt-3">
    <p><strong>Havi keret:</strong> @budgetData.MonthlyBudget Ft</p>
    <p><strong>Elköltve:</strong> @budgetData.SpentAmount Ft</p>
    <div class="progress mb-4" style="height: 20px;">
        <div class="progress-bar bg-info" role="progressbar"
             style="width: @BudgetPercentage%"
             aria-valuenow="@budgetData.SpentAmount" aria-valuemin="0"
             aria-valuemax="@budgetData.MonthlyBudget">
            @BudgetPercentage
        </div>
    </div>
</div>

<!-- Megtakarítási célok -->
<h5>Megtakarítási célok</h5>

<EditForm Model="@newGoal" OnValidSubmit="AddGoal">
    <div class="mb-3">
        <label class="form-label">Cél megnevezése</label>
        <InputText @bind-Value="newGoal.Name" class="form-control" />
    </div>
    <div class="mb-3">
        <label class="form-label">Célösszeg (Ft)</label>
        <InputNumber @bind-Value="newGoal.TargetAmount" class="form-control" />
    </div>
    <div class="mb-3">
        <label class="form-label">Eddig félretett összeg (Ft)</label>
        <InputNumber @bind-Value="newGoal.SavedAmount" class="form-control" />
    </div>
    <button class="btn btn-primary">Cél hozzáadása</button>
</EditForm>

@if (savingGoals.Any())
{
    <div class="mt-4">
        @foreach (var goal in savingGoals)
        {
            var percent = (goal.SavedAmount / goal.TargetAmount) * 100;
            <div class="mb-3">
                <p><strong>@goal.Name</strong> - @goal.SavedAmount Ft / @goal.TargetAmount Ft</p>
                <div class="progress">
                    <div class="progress-bar bg-success" role="progressbar"
                         style="width: @percent.ToString("0.##")%"
                         aria-valuenow="@goal.SavedAmount" aria-valuemin="0"
                         aria-valuemax="@goal.TargetAmount">
                        @percent.ToString("0.##")%
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <p class="mt-3 text-muted">Jelenleg nincs hozzáadott megtakarítási cél.</p>
}

@code {
    private BudgetData budgetData = new();
    private SavingGoal newGoal = new();
    private List<SavingGoal> savingGoals = new();

    private string BudgetPercentage =>
        budgetData.MonthlyBudget == 0 ? "0%" :
        $"{(budgetData.SpentAmount * 100 / budgetData.MonthlyBudget):0.##}%";

    private void UpdateBudget()
    {
        // később backendhez kapcsolható
    }

    private void AddGoal()
    {
        savingGoals.Add(new SavingGoal
            {
                Name = newGoal.Name,
                TargetAmount = newGoal.TargetAmount,
                SavedAmount = newGoal.SavedAmount
            });

        newGoal = new();
    }

    public class BudgetData
    {
        public int MonthlyBudget { get; set; }
        public int SpentAmount { get; set; }
    }

    public class SavingGoal
    {
        public string Name { get; set; } = string.Empty;
        public int TargetAmount { get; set; }
        public int SavedAmount { get; set; }
    }
}
